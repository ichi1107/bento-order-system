/**
 * Generated TypeScript types from Pydantic schemas
 * Auto-generated from schemas.py
 * 
 * DO NOT EDIT THIS FILE MANUALLY
 * Run 'scripts/generate-types.sh' to regenerate
 */

// ===== 共通型定義 =====

export interface SuccessResponse {
  success: boolean;
  message: string;
}

export interface ErrorResponse {
  success: boolean;
  message: string;
  detail?: string | null;
}

// ===== 認証関連 =====

export interface UserCreate {
  username: string;
  email: string;
  password: string;
  full_name: string;
  role: string;
}

export interface UserLogin {
  username: string;
  password: string;
}

export interface UserResponse {
  id: number;
  username: string;
  email: string;
  full_name: string;
  role: string;
  is_active: boolean;
  created_at: string;
}

export interface TokenResponse {
  access_token: string;
  token_type: string;
  user: UserResponse;
}

// ===== 役割（Role）関連 =====

export type RoleName = 'owner' | 'manager' | 'staff';

export interface RoleResponse {
  id: number;
  name: RoleName;
  description: string | null;
  created_at: string;
}

export interface RoleAssignRequest {
  user_id: number;
  role_id: number;
}

export interface UserRoleResponse {
  id: number;
  user_id: number;
  role_id: number;
  assigned_at: string;
  role: RoleResponse;
}

export interface UserWithRolesResponse {
  id: number;
  username: string;
  email: string;
  full_name: string;
  role: string;
  is_active: boolean;
  created_at: string;
  user_roles: UserRoleResponse[];
}

// ===== メニュー関連 =====

export interface MenuBase {
  name: string;
  price: number;
  description?: string | null;
  image_url?: string | null;
  is_available: boolean;
}

export interface MenuCreate extends MenuBase {}

export interface MenuUpdate {
  name?: string | null;
  price?: number | null;
  description?: string | null;
  image_url?: string | null;
  is_available?: boolean | null;
}

export interface MenuResponse extends MenuBase {
  id: number;
  created_at: string;
  updated_at: string;
}

export interface MenuListResponse {
  menus: MenuResponse[];
  total: number;
}

// ===== 注文関連 =====

export interface OrderBase {
  menu_id: number;
  quantity: number;
  delivery_time?: string | null;
  notes?: string | null;
}

export interface OrderCreate extends OrderBase {}

export interface OrderStatusUpdate {
  status: string;
}

export interface OrderResponse {
  id: number;
  user_id: number;
  menu_id: number;
  quantity: number;
  total_price: number;
  status: string;
  delivery_time?: string | null;
  notes?: string | null;
  ordered_at: string;
  updated_at: string;
  menu: MenuResponse;
  user?: UserResponse | null;
}

export interface OrderListResponse {
  orders: OrderResponse[];
  total: number;
}

// ===== 注文履歴関連（新規追加）=====

export interface OrderHistoryItem {
  id: number;
  quantity: number;
  total_price: number;
  status: string;
  delivery_time?: string | null;
  notes?: string | null;
  ordered_at: string;
  updated_at: string;
  menu_id: number;
  menu_name: string;
  menu_image_url?: string | null;
  menu_price: number;
}

export interface OrderHistoryResponse {
  orders: OrderHistoryItem[];
  total: number;
}

// ===== その他 =====

export interface OrderSummary {
  total_orders: number;
  pending_orders: number;
  confirmed_orders: number;
  preparing_orders: number;
  ready_orders: number;
  completed_orders: number;
  cancelled_orders: number;
  total_sales: number;
}

export interface DailySalesReport {
  date: string;
  total_orders: number;
  total_sales: number;
  popular_menu?: string | null;
}

export interface MenuSalesReport {
  menu_id: number;
  menu_name: string;
  total_quantity: number;
  total_sales: number;
}

export interface SalesReportResponse {
  period: string;
  start_date: string;
  end_date: string;
  daily_reports: DailySalesReport[];
  menu_reports: MenuSalesReport[];
  total_sales: number;
  total_orders: number;
}

export interface OrderFilter {
  status?: string | null;
  user_id?: number | null;
  menu_id?: number | null;
  start_date?: string | null;
  end_date?: string | null;
  page: number;
  per_page: number;
}

export interface MenuFilter {
  is_available?: boolean | null;
  price_min?: number | null;
  price_max?: number | null;
  search?: string | null;
  page: number;
  per_page: number;
}

export interface PaginationInfo {
  page: number;
  per_page: number;
  total: number;
  total_pages: number;
  has_next: boolean;
  has_prev: boolean;
}

export interface PaginatedResponse {
  pagination: PaginationInfo;
}